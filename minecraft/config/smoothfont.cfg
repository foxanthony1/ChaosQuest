# Configuration file

debug {
    # Enable debug log.
    B:debugLog=false

    # Show event log on the game screen.
    B:showLogInChat=false
}


experiments {
    # Experimental: Try interpolation for MOD original font renderer.
    B:alternativeInterpolation=false

    # Enable premultiplied alpha instead of straight alpha.
    B:enablePremultipliedAlpha=false
}


settings {
    # Allow to use NOPT Texture in order to reduce resource consumption.
    B:allowNPOTTexture=false

    # Automatic detection of brightness.
    B:autoBrightness=true

    # Enable a blur reduction for fonts less than or equal to the specified size.(0~16)
    I:blurReduction=10

    # Brightness correction level for interpolated fonts.
    I:brightness=5

    # Disable italic for small fonts.
    B:disableSmallItalic=false

    # Enable alpha blending
    B:enableAlphaBlend=true

    # Enable anisotropic filtering.
    B:enableAnisotropicFilter=true

    # Enable double rendering
    B:enableDouble=false

    # Enable linear interpolation
    B:enableInterpolation=true

    # Enable mipmap for fonts.
    B:enableMipmap=true

    # Disable interpolation for characters drawn with high magnification.
    B:excludeHighMag=true

    # Disable interpolation for the integral multiple of default size.
    B:excludeIntMultiple=true

    # Align baseline among different fonts.
    B:fontAlignBaseline=true

    # Enable anti-alias for OS fonts.(0:off, 1:normal, 2:high precision)
    I:fontAntiAlias=0

    # Enable automatic font size detection for the font resolution.
    B:fontAutoSizing=true

    # Enable emphasis for OS fonts. (0:off, 1:Ascii only, 2:Non-Ascii, 3:All)
    I:fontEmphasis=0

    # Font gap.
    I:fontGap=-2

    # Primary system font name.
    S:fontName=SansSerif

    # OS font resolution. (0:8px, 1:10px, 2:12px, 3:16px, 4:24px, 5:32px, 6:48px, 7:64px)
    I:fontResolution=3

    # Tolerance (in percent) for rounding font scale to integer.(Default: 0.5)
    D:fontScaleRoundingTolerance=0.5

    # OS font size. (-4:-20%, ... 0:normal, ... 6:+30%)
    I:fontSizeAdjustment=0

    # Force to use unicode font.
    B:forceUnicode=false

    # Horizontal margin width.
    I:horizontalMargin=1

    # Disable interpolation for fonts above this magnification when excludeHighMag is enabled.(Default: 3.0)
    D:limitMagnification=3.0

    # Mipmap level.
    I:mipmapLevel=4

    # Mipmap LOD bias.
    I:mipmapLodBias=-3

    # These font renderer classes use normal precision font width instead of high precision font width.
    # Although the balance of character spacing is worse, compatibility of string width improves.
    S:normalPrecisionClasses <
        slimeknights.tconstruct.library.client.CustomFontRenderer
        cofh.core.render.FontRendererCore
        blusunrize.immersiveengineering.client.IEItemFontRender
     >

    # Opacity level.
    I:opacityLevel=8

    # Mipmap LOD bias for overlay screen.
    I:overlayLodBias=-5

    # Enable odd multiple GUI scale factors (x3,x5,...) when using unicode font.
    B:removeScaleRestriction=true

    # Secondary system font name. It is used if the primary font cannot be displayed.
    S:secondaryFontName=SansSerif

    # Shadow length. (0~10)
    I:shadowLength=5

    # The size of the font is determined so that the height and width of these characters will not protrude.
    S:sizeAdjustmentChars=

    # These font renderer classes are not affected by this mod.
    S:unaffectedClasses <
        malte0811.industrialWires.client.panelmodel.RawModelFontRenderer
     >

    # Use the installed fonts in the operating system.
    B:useOSFont=false

    # These font renderer classes is most high compatibility with vanilla font width calculation,
    # but the precision of font width calculation is more poorer than the other precision modes.
    S:vanillaPrecisionClasses <
     >

    # Vertical margin width.
    I:verticalMargin=1

    # Workaround for transparent texts on a scoreboard.
    B:workaroundTransparentScoreboard=true

    # Workaround for wrong GL state in GlStateManager.
    # Some mods directly call GL11 method and don't use GlStateManager properly.
    # If the color of the transparent part changes or the alpha blending is wrong, try this option.
    B:workaroundWrongGlState=true
}


state {
    # Internal state.
    B:fontDetailList=false
}


